on:
  push:
    branches: [ijjk/test-buildjet]

name: Build, test, and deploy

env:
  NAPI_CLI_VERSION: 2.13.3
  TURBO_VERSION: 1.6.3
  RUST_TOOLCHAIN: nightly-2022-11-04
  PNPM_VERSION: 7.24.3
  PLAYWRIGHT_VERSION: 1.28.1
  NODE_LTS_VERSION: v18
  NODE_PREV_VERSION: v16

jobs:
  test:
    runs-on: buildjet-16vcpu-ubuntu-2204
    env:
      NEXT_TELEMETRY_DISABLED: 1
      # we build a dev binary for use in CI so skip downloading
      # canary next-swc binaries in the monorepo
      NEXT_SKIP_NATIVE_POSTINSTALL: 1
      TURBO_TEAM: 'vercel'
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_REMOTE_ONLY: 'true'
    steps:
      # Start with LTS for build and initial tests
      - name: Setup node ${{ env.NODE_LTS_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_LTS_VERSION }}
          check-latest: true

      - run: node -v
        name: print Node.js version

      - run: npm i -g "pnpm@${PNPM_VERSION}" "@napi-rs/cli@${NAPI_CLI_VERSION}" "turbo@${TURBO_VERSION}"
        name: install npm packages

      - uses: actions/checkout@v3
        name: checkout repo
        with:
          # we use an arbitrary depth to have some history to check for
          # related changes e.g. docs only changes
          fetch-depth: 15

      - name: Check non-docs only change
        run: echo "DOCS_CHANGE<<EOF" >> $GITHUB_OUTPUT; echo "$(node scripts/run-for-change.js --not --type docs --exec echo 'nope')" >> $GITHUB_OUTPUT; echo 'EOF' >> $GITHUB_OUTPUT
        id: docs-change

      - run: echo "${{steps.docs-change.outputs.DOCS_CHANGE}}"
        name: docs change result

      - run: pnpm install
        name: install dependencies

      - run: pnpm dlx "playwright@${PLAYWRIGHT_VERSION}" install-deps && pnpm dlx "playwright@${PLAYWRIGHT_VERSION}" install
        name: setup playwright dependencies

      - run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain "${RUST_TOOLCHAIN}" &&
          rustup target add x86_64-unknown-linux-gnu &&
          unset CC_x86_64_unknown_linux_gnu && unset CC &&
          pnpm build-ci &&
          strip packages/next-swc/native/next-swc.*.node &&
        name: Build

      - run: pnpm lint
        name: Run lint checks

      - run: NEXT_TEST_MODE=dev node run-tests.js -c 8 --type e2e
        name: Test E2E (dev) (Node.js LTS)

      - run: NEXT_TEST_MODE=start node run-tests.js -c 8 --type e2e
        name: Test E2E (start) (Node.js LTS)

      - run: NEXT_TEST_MODE=start node run-tests.js -c 8
        name: Test Integration (Node.js LTS)

      - run: pnpm test-browsers
        name: Test Firefox and Safari

      # Now test prev Node.js for select tests
      - name: Setup node ${{ env.NODE_PREV_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_PREV_VERSION }}
          check-latest: true

      - run: node -v
        name: print Node.js version

      - run: NEXT_TEST_MODE=dev node run-tests.js -c 8 --type e2e
        name: Test E2E (dev) (Node.js PREV)

      - run: NEXT_TEST_MODE=start node run-tests.js -c 8 --type e2e
        name: Test E2E (start) (Node.js PREV)

      - run: pnpm test-firefox-ci
        name: Test Firefox (Node.js PREV)
